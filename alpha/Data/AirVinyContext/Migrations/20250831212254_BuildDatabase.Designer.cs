// <auto-generated />
using System;
using AirVinyContext.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirVinyContext.Migrations
{
    [DbContext(typeof(MyAirVinylCtx))]
    [Migration("20250831212254_BuildDatabase")]
    partial class BuildDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirVinyContext.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<decimal>("AmountOfCashToSpend")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfRecordsOnWishList")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("AirVinyContext.Entities.PressingDetail", b =>
                {
                    b.Property<int>("PressingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PressingDetailId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Grams")
                        .HasColumnType("int");

                    b.Property<int>("Inches")
                        .HasColumnType("int");

                    b.HasKey("PressingDetailId");

                    b.ToTable("PressingDetails");
                });

            modelBuilder.Entity("AirVinyContext.Entities.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<int>("RatedByPersonId")
                        .HasColumnType("int");

                    b.Property<int>("RecordStoreId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex(new[] { "RatedByPersonId" }, "IX_Rating_RatedByPersonId");

                    b.HasIndex(new[] { "RecordStoreId" }, "IX_Rating_RecordStoreId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("AirVinyContext.Entities.RecordStore", b =>
                {
                    b.Property<int>("RecordStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordStoreId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreAddressCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("StoreAddress_City");

                    b.Property<string>("StoreAddressCountry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("StoreAddress_Country");

                    b.Property<string>("StoreAddressPostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("StoreAddress_PostalCode");

                    b.Property<string>("StoreAddressStreet")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("StoreAddress_Street");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordStoreId");

                    b.ToTable("RecordStores");
                });

            modelBuilder.Entity("AirVinyContext.Entities.VinylRecord", b =>
                {
                    b.Property<int>("VinylRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VinylRecordId"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CatalogNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PressingDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("VinylRecordId");

                    b.HasIndex(new[] { "PersonId" }, "IX_VinylRecords_PersonId");

                    b.HasIndex(new[] { "PressingDetailId" }, "IX_VinylRecords_PressingDetailId");

                    b.ToTable("VinylRecords");
                });

            modelBuilder.Entity("AirVinyContext.Entities.Rating", b =>
                {
                    b.HasOne("AirVinyContext.Entities.Person", "RatedByPerson")
                        .WithMany("Ratings")
                        .HasForeignKey("RatedByPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirVinyContext.Entities.RecordStore", "RecordStore")
                        .WithMany("Ratings")
                        .HasForeignKey("RecordStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RatedByPerson");

                    b.Navigation("RecordStore");
                });

            modelBuilder.Entity("AirVinyContext.Entities.VinylRecord", b =>
                {
                    b.HasOne("AirVinyContext.Entities.Person", "Person")
                        .WithMany("VinylRecords")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirVinyContext.Entities.PressingDetail", "PressingDetail")
                        .WithMany("VinylRecords")
                        .HasForeignKey("PressingDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("PressingDetail");
                });

            modelBuilder.Entity("AirVinyContext.Entities.Person", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("VinylRecords");
                });

            modelBuilder.Entity("AirVinyContext.Entities.PressingDetail", b =>
                {
                    b.Navigation("VinylRecords");
                });

            modelBuilder.Entity("AirVinyContext.Entities.RecordStore", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
